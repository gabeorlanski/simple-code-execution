name: Build and Deploy Documentation

on:
  push:
    branches: [main, master]
    paths:
      - "docs/**"
      - "code_execution/**"
      - ".github/workflows/docs.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "docs/**"
      - "code_execution/**"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', 'docs/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install -e .

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

      - name: Build documentation
        run: |
          cd docs
          make clean || true
          sphinx-build -b html . _build/html
          # Create .nojekyll file to serve files with underscores
          touch _build/html/.nojekyll

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/_build/html/

      - name: Upload to GitHub Pages
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html/

  deploy:
    # Deploy to GitHub Pages
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Debug Build Directory
        run: |
          ls -la docs/_build/html/
          ls -la docs/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
